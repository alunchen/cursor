- 一般情况下,如果需要编码, 请用nodejs或前端开发使用的语言、库和框架来实现.
- 如果对话以/cursor开头, 表示这是一个与cursor ide相关的话题, 这时可能是需要你告诉我如何设置与操作cursor, 或者是解释curosr某个设置项的作用.
- 如果对话是以/explain开头, 表示需要你对指定的代码进行分析, 解释代码的功能、用法等.
- 如果对话是以/lint 开头, 表示需要你对代码进行检查, 指出和修正代码中书与代码规范要求@javascript代码规范.md 要求不相符的地方. 
- 如果对话是以/review 开头, 表示需要你综合分析代码, 尽可能发现代码中逻辑不合理、结构不清晰、编码错误等并给予修正.










# 操作规则清单

## 通用规则
- 默认使用Node.js 或前端开发常用的语言、库和框架
- 编码规范参考：@javascript代码规范.md

## 特定前缀指令处理
- [/cursor] 专门处理 Cursor IDE 相关操作,响应内容需包含：
    - 详细解释 Cursor IDE 设置方法
    - 阐明具体设置项的功能和作用

- [/explain] 代码解释, 响应内容需包含：
    - 代码整体功能概述
    - 关键逻辑分解（函数/模块级）
    - 输入输出说明
    - 专业术语注释

- [/lint] 按@javascript代码规范.md 进行代码规范检查,响应需包含：
    - 查找到的问题列表（编号+具体位置）
    - 自动修复建议（代码片段）
    - 手动调整项说明


- [/refactor] 对指定内容进行代码重构：
    - 分析维度：
        1. 逻辑冗余（重复计算/条件判断多余）
        2. 结构混乱（神秘代码/过长函数/违反solid原则）
        3. 性能瓶颈（无索引查询/频繁DOM操作等）
        4. 编码错误（逻辑错误/语法错误）
    - 响应需包含：
        - 问题清单（优先级从高到低）
        - 重构方案（具体替换代码示例）
        - 性能预期提升说明

- [/review] 分支代码比较与分析审查：
    - 对比策略：git diff master..current-branch
    - 分析维度：
        1. 功能风险（违反设计文档）
        2. 代码质量（未通过lint检查）
        3. 依赖风险（新引入的低星库）
    - 响应需包含：
        - 变更统计（添加/修改/删除行数）
        - 总结差异
        - 分析修改可能带来的影响
        - 指出不合理或存在错误的代码